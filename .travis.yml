dist: bionic
sudo: false
language: cpp
branches:
  only:
    - 0.6-dev
git:
  depth: 1

common_packages: &all_packages
  - libpcre3-dev
  - libpcre2-dev

matrix:
  include:

    # Clang on osx
    - os: osx
      osx_image: xcode10.1
      compiler: clang
      env:
        - MATRIX_EVAL="CXX_COMPILER=clang++ C_COMPILER=clang"

    - os: osx
      osx_image: xcode10.2
      compiler: clang
      env:
        - MATRIX_EVAL="CXX_COMPILER=clang++ C_COMPILER=clang"

    # GCC on linux
    - os: linux
      compiler: gcc
      addons:
        apt:
          packages: *all_packages
      env:
        - MATRIX_EVAL="CXX_COMPILER=g++ C_COMPILER=gcc"

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
             - sourceline: "ppa:ubuntu-toolchain-r/test"
          packages:
             - *all_packages
             - g++-8
      env:
        - MATRIX_EVAL="CXX_COMPILER=g++-8 C_COMPILER=gcc-8"

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
             - sourceline: "ppa:ubuntu-toolchain-r/test"
          packages:
             - *all_packages
             - g++-9
      env:
        - MATRIX_EVAL="CXX_COMPILER=g++-9 C_COMPILER=gcc-9"

    # Clang on Linux
    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
           - sourceline: 'ppa:ubuntu-toolchain-r/test'
           - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-5.0 main'
             key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - *all_packages
            - clang-5.0
      env:
        - MATRIX_EVAL="CXX_COMPILER=clang++-5.0 C_COMPILER=clang-5.0"

    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
           - sourceline: 'ppa:ubuntu-toolchain-r/test'
           - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-6.0 main'
             key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - *all_packages
            - clang-6.0
      env:
        - MATRIX_EVAL="CXX_COMPILER=clang++-6.0 C_COMPILER=clang-6.0"

    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
            - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-7 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - *all_packages
            - clang-7
      env:
        - MATRIX_EVAL="CXX_COMPILER=clang++-7 C_COMPILER=clang-7"

    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
            - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-8 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - *all_packages
            - clang-8
      env:
        - MATRIX_EVAL="CXX_COMPILER=clang++-8 C_COMPILER=clang-8"

    - os: linux
      compiler: clang
      addons:
        apt:
          packages:
            - *all_packages
            - clang-9
            - g++-9
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
            - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
      env:
        - MATRIX_EVAL="CXX_COMPILER=clang++-9 C_COMPILER=clang-9"

    - os: linux
      compiler: clang
      addons:
        apt:
          packages:
            - *all_packages
            - clang-10
            - g++-9
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
            - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
      env:
        - MATRIX_EVAL="CXX_COMPILER=clang++-10 C_COMPILER=clang-10"

before_install:
    - eval "${MATRIX_EVAL}"

script:
  - gem install Mxx_ru
  - mxxruexternals
  - mkdir cmake_build_$CXX_COMPILER
  - pwd
  - cd cmake_build_$CXX_COMPILER
  - pwd
  - cmake -DCMAKE_INSTALL_PREFIX=target -DCMAKE_C_COMPILER=$C_COMPILER -DCMAKE_CXX_COMPILER=$CXX_COMPILER -DCMAKE_BUILD_TYPE=Release ../dev/
  - cmake --build . -j 4
  - ctest --output-on-failure

notifications:
  email:
    recipients:
      - utromvecherom@gmail.com
      - eao197@gmail.com

